export LDFLAGS=
export CPPFLAGS=
export CFLAGS=
export PATH="$(pwd)/build:$(pwd)/scripts:$PATH"
is_iterm2(){
    if [[ "$ITERM_SESSION_ID" != "" ]]; 
    then
        true
    else
        false
    fi
}
#__build_path(){
#  BUILD_PATH="$(
#  make meson-binaries
#|xargs dirname|sort -u|xargs -I % echo ./build/%|tr '\n' ':')"
#  printf "%s:%s" "$BUILD_PATHS" "$PATH"
#}
#paleta <  ~/.palettes/frontend-galaxy-dark

#if [[ -e "$ALACRITTY_SOCKET" ]]; then
#    pycritty -f DaddyTimeMono_Nerd_Font_Mono
#fi

setup_kitty() {
	#kitty @ set-tab-title "   meson_deps   "
	#kitty @ set-tab-color active_fg=black active_bg=green
	#kitty @ env REPO=meson_deps
    #kitty @ env REPO_dir="$(pwd)"
	#kitty @ set-font-size 28
	#kitty @ set-colors foreground=white background=black
	#kitty @ set-colors Pro.conf
	#kitty @ set-background-opacity 1
	#kitty @ goto-layout vertical
	#kitty @ set-window-logo a.png
    kitty_logo(){
    	ansi -n --bg-black --green --reverse "    meson_deps    " > .Kitty-logo.ans
    	ansilove -q -c 20 -R 4 -t ANS -o .Kitty-logo.png .Kitty-logo.ans
    	kitty @set-spacing margin=0 padding=0 padding-v=0 margin-v=0
    	kitty @set-window-logo --no-response --self --position=top-right .Kitty-logo.png
    }
    true
}


nontest_files() {
	echo
	echo -ne "                                "
	ansi --blink --bold --green --bg-black --reverse "NONTEST SOURCE FILES" && echo
	echo
	Loc --files --include '^.*/.*\.c$' --exclude '^.*/.*test\.c$' --exclude '.*/sqlite3\.c$' | bline -a bold:green -r yellow -R 1-6
	echo
	echo
}

test_files() {
	ansi --blink --bold --magenta --bg-black --reverse "TEST SOURCE FILES"
	Loc --files --include '^.*/.*test\.c$'
}

src_report() {
	clear
	nontest_files
	echo
	test_files
	echo
	echo
}

if ! is_iterm2; then
    [[ "$TMUX_PANE" == "" ]] && [[ "$KITTY_WINDOW_ID" != "" ]] && setup_kitty
fi

do_src_report(){
    if ! is_iterm2; then
        [[ "$TMUX_PANE" == "" ]] && src_report
    fi
}

do_kfc_cli(){
    kfc-cli -p monokaivivid
}

#is_iterm2 || { kfc -p base16-bright; }
#do_kfc_cli


BUILD_PATHS="$(find build -type d -maxdepth 1|tr '\n' ':')"
export PATH="$(pwd)/.bin:$BUILD_PATHS:$PATH"
#paleta < ~/.palettes/base16-shapeshifter-dark
#paleta <  ~/.palettes/tomorrow-night-dark
#kfc -s base16-outrun
#kfc -s sexy-phrak1
#ALACRITTY_FONT=Glass_TTY_VT220
kfc -p sexy-gnometerm

__scc_files(){
    find \
        meson/meson.build submodules/meson.build meson.build \
        scripts \
        Makefile \
        meson_options.txt \
        */*.c -type f\
    |egrep '\.txt$|Makefile$|\.sh$|\.build$|\.h$|\.c$'\
    |egrep -v 'submodules/'\
    |sort -u\
    |tr '\n' ' '
}

__scc_report(){
    scc -v -f wide --by-file $(__scc_files)
}

#do_src_report
__scc_report




kfc -p mouse-cursor-light-blue
