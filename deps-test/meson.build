deps_test_srcs = [
  'deps-test.c',
]
deps_include_dirs = [
  inc,
]
deps_test_deps = [
  hidapi_dep,
  libusb_dep,
  miniaudio_dep,
  c89atomic_dep,
  c_string_buffer_dep,
  libterminput_dep,
  tempdir_dep,
  process_dep,
  uri_c_dep,
  deps_dep,
  occurrences_dep,
  str_replace_dep,
  kitty_dep,
  tiny_regex_c_dep,
  c_vector_dep,
  murmurhash_dep,
  libbeaufort_dep,
  bitset_dep,
  c_dt_dep,
  bestline_dep,
  layout_dep,
  csplit_dep,
  subhook_dep,
  #  libucl_dep,
  libconfuse_dep,
  socket99_dep,
  container_of_dep,
  genpassword_c_dep,
  genpassword_c_dep,
  c_timestamp_dep,
  url_router_dep,
  hashmap_h_dep,
  str_flatten_c_dep,
  pidfile_dep,
  semver_c_dep,
  flingfd_dep,
  uptime_dep,
  c_timestamp_dep,
  libtrycatch_dep,
  querystring_c_dep,
  libforks_dep,
  colorwheel_dep,
  siphash_dep,
  logh_dep,
  c_forever_dep,
  layout_dep,
  c_dbg_dep,
  c_eventemitter_dep,
  c_workqueue_dep,
  microtar_dep,
  dmt_dep,
  microui_dep,
  catpath_dep,
  str_truncate_dep,
  ok_file_formats_dep,
  vtparse_dep,
  cansid_dep,
  path_module_dep,
  tai64n_dep,
  sense_c_dep,
  ansi_rgb_utils_dep,
  list_dep,
  seethe_dep,
  posix_tree_dep,
  knock_dep,
  probarlib_dep,
  variation_ui_dep,
  ansi_utils_dep,
  http_get_dep,
  mkcreflect_dep,
  libtinyfiledialogs_dep,
  termbox2_dep,
  url_h_dep,
  path_normalize_c_dep,
  extname_c_dep,
  wildcardcmp_dep,
  is_number_c_dep,
  minmax_dep,
  bench_dep,
  bitfield_dep,
  uthash_dep,
  debug_memory_dep,
  incbin_dep,
  emojis_dep,
  libyuarel_dep,
  levenshtein_dep,
  libut_dep,
  chfreq_c_dep,
  msgbox_dep,
  dotenv_c_dep,
#  libprinthex_dep,
  function_overload_dep,
  flingfd_dep,
]
deps_c_args = [
  '-DINCBIN_SILENCE_BITCODE_WARNING',
  '-Wno-macro-redefined',
  '-Wno-unknown-escape-sequence',
]
deps_link_args = [
]

deps_cur_dir = join_paths(meson.current_source_dir(), '..')
deps_scripts_dir = join_paths(meson.current_source_dir(), 'scripts')
deps_ls_tests_script = join_paths(c_deps_dir,'scripts/ls_deps_test_tests.sh')

if get_option('enable-binaries')
  deps_test_exec = executable('deps-test',
     deps_test_srcs,
     dependencies: deps_test_deps,
     include_directories: deps_include_dirs,
     link_args: deps_link_args,
     c_args: deps_c_args,
     install: true,
  )
endif
